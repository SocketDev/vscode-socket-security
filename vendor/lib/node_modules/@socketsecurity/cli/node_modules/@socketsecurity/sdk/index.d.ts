export type SocketSdkReturnType<T extends keyof import("./types/api").operations> = import('./types/api-helpers').OpReturnType<import('./types/api').operations[T]>;
export type SocketSdkErrorType<T extends keyof import("./types/api").operations> = import('./types/api-helpers').OpErrorType<import('./types/api').operations[T]>;
export type SocketSdkResultType<T extends keyof import("./types/api").operations> = SocketSdkReturnType<T> | SocketSdkErrorType<T>;
export type SocketSdkOptions = {
    agent?: import("got").Agents | undefined;
    baseUrl?: string | undefined;
};
export class SocketSdk {
    constructor(apiKey: string, options?: SocketSdkOptions);
    createReportFromFilePaths(filePaths: string[], pathsRelativeTo?: string): Promise<SocketSdkResultType<'createReport'>>;
    getScoreByNPMPackage(pkgName: string, version: string): Promise<SocketSdkResultType<'getScoreByNPMPackage'>>;
    getIssuesByNPMPackage(pkgName: string, version: string): Promise<SocketSdkResultType<'getIssuesByNPMPackage'>>;
    getReportList(): Promise<SocketSdkResultType<'getReportList'>>;
    getReport(id: string): Promise<SocketSdkResultType<'getReport'>>;
    getQuota(): Promise<SocketSdkResultType<'getQuota'>>;
    #private;
}
//# sourceMappingURL=index.d.ts.map